{"version":3,"sources":["app/partials/Navbar.js","app/Services.js","app/partials/Snakbar.js","app/packages/List.js","app/packages/Create.js","app/partials/Breadcrum.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","GetHotels","a","fetch","response","json","GetPackages","GetPackage","id","UpdatePackage","data","_id","method","mode","cache","headers","referrerPolicy","body","JSON","stringify","CreatePackage","DeletePackage","Alert","props","elevation","CustomizedSnackbars","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","handleClose","severity","message","container_root","margin","bullet","display","transform","fontSize","pos","marginBottom","valid","marginTop","button","List","useState","packages","setPackages","snackbar","setSnackbar","useEffect","result","reverse","deletePackage","value","filter","v","Grid","container","item","xs","justify","Button","href","startIcon","map","idx","key","Card","CardContent","gutterBottom","hotel_info","name","component","toUpperCase","duration_days","style","minHeight","description","moment","valid_to","format","CardActions","onClick","appBar","layout","width","marginLeft","breakpoints","up","paper","padding","stepper","buttons","justifyContent","fetchPreloadData","__package","getQueryParams","hotels","submitAction","state","setState","valid_from","Date","add","toDate","price","hotel_id","param","URLSearchParams","window","location","search","get","Create","setHotels","handleChange","event","target","hotelList","MenuItem","CssBaseline","Paper","align","md","Select","label","onChange","fullWidth","TextField","required","placeholder","KeyboardButtonProps","multiline","rows","bind","handleClick","console","info","useStyle","Breadcrumb","crum","path","pathname","match","length","getName","Breadcrumbs","Link","App","utils","DateFnsUtils","Breadcrum","excat","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"uTAQMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAIC,SAASK,IACtB,IAAMC,EAAUV,IAEhB,OACE,yBAAKW,UAAWD,EAAQP,MACtB,kBAACS,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQL,UAAWD,EAAQL,WAAYY,MAAM,UAAUC,aAAW,QACjF,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKT,UAAWD,EAAQF,OAA5C,qB,yEC9BGa,EAAS,uCAAG,4BAAAC,EAAA,sEACAC,MAAM,eADN,cACjBC,EADiB,gBAEVA,EAASC,OAFC,mFAAH,qDAKTC,EAAW,uCAAG,4BAAAJ,EAAA,sEACFC,MAAM,iBADJ,cACnBC,EADmB,gBAEZA,EAASC,OAFG,mFAAH,qDAKXE,EAAU,uCAAG,WAAOC,GAAP,eAAAN,EAAA,sEACDC,MAAM,iBAAiBK,GADtB,cAClBJ,EADkB,gBAEXA,EAASC,OAFE,mFAAH,sDAKVI,EAAa,uCAAG,WAAOC,GAAP,iBAAAR,EAAA,6DACrBM,EAAKE,EAAKC,WACTD,EAAKC,IAFe,SAGJR,MAAM,iBAAiBK,EAAI,CAChDI,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,QAAS,CACP,eAAgB,oBAElBC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUT,KAXI,cAGrBN,EAHqB,gBAcdA,EAASC,OAdK,mFAAH,sDAiBbe,EAAa,uCAAG,WAAOV,GAAP,eAAAR,EAAA,sEAEJC,MAAM,gBAAiB,CAC5CS,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,QAAS,CACP,eAAgB,oBAElBC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUT,KAVI,cAErBN,EAFqB,gBAadA,EAASC,OAbK,mFAAH,sDAgBbgB,EAAa,uCAAG,WAAOb,GAAP,eAAAN,EAAA,sEACJC,MAAM,iBAAiBK,EAAI,CAAEI,OAAQ,WADjC,cACrBR,EADqB,gBAEdA,EAASC,OAFK,mFAAH,sD,sFC5C1B,SAASiB,EAAMC,GACb,OAAO,kBAAC,IAAD,eAAUC,UAAW,EAAGxB,QAAQ,UAAauB,IAKvC,SAASE,EAAoBF,GAC1C,OACE,kBAACG,EAAA,EAAD,CAAUC,aAAc,CACpBC,SAAU,SACVC,WAAY,QACXC,KAAMP,EAAMO,KAAMC,iBAAkB,IAAMC,QAAST,EAAMU,aAC5D,kBAAC,EAAD,CAAOD,QAAST,EAAMU,YAAaC,SAAUX,EAAMW,UAAY,WAC3DX,EAAMY,UCFhB,IAAMvD,EAAYC,aAAW,SAAAC,GAAK,MAAI,CACpCsD,eAAgB,CACdpD,SAAU,GAEZD,KAAM,CACJsD,OAAQvD,EAAMK,QAAQ,IAExBmD,OAAQ,CACNC,QAAS,eACTF,OAAQ,QACRG,UAAW,cAEbpD,MAAO,CACLqD,SAAU,IAEZC,IAAK,CACHC,aAAc,IAEhBC,MAAO,CACLC,UAAW,IAEbC,OAAQ,CACNT,OAAQvD,EAAMK,QAAQ,QA4GX4D,EAxGF,WACX,IAAMzD,EAAUV,IADD,EAIeoE,mBAAS,IAJxB,mBAIVC,EAJU,KAIAC,EAJA,OAKeF,mBAAS,CACrClB,MAAM,EACNI,SAAU,UACVC,QAAS,KARI,mBAKVgB,EALU,KAKAC,EALA,KAUfC,qBAAU,WACR,sBAAC,4BAAAnD,EAAA,sEACqBI,IADrB,OACKgD,EADL,OAECJ,EAAYI,EAAOC,WAFpB,0CAAD,KAIC,IAEH,IAAMC,EAAa,uCAAG,WAAOC,GAAP,SAAAvD,EAAA,+EAGZmB,EAAcoC,GAHF,OAIlBL,EAAY,CACVtB,MAAM,EACNI,SAAU,UACVC,QAAS,cAEXe,EAAYD,EAASS,QAAO,SAAAC,GAAC,OAAGA,EAAEhD,MAAQ8C,MATxB,gDAWlBL,EAAY,CACVtB,MAAM,EACNI,SAAU,QACVC,QAAS,gBAdO,yDAAH,sDAuBnB,OACE,oCACA,kBAACV,EAAD,CAAqBK,KAAMqB,EAASrB,KAAMI,SAAUiB,EAASjB,SAAUC,QAASgB,EAAShB,QAASF,YAN5E,WACtBmB,EAAY,CAACtB,MAAM,OAMnB,kBAAC8B,EAAA,EAAD,CAAMC,WAAS,EAACtE,UAAWD,EAAQ8C,eAAgBjD,QAAS,GAC1D,kBAACyE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIF,WAAS,EAACG,QAAQ,YACnC,kBAACC,EAAA,EAAD,CACEjE,QAAQ,YACRH,MAAM,UACNqE,KAAI,UACJ3E,UAAWD,EAAQwD,OACnBqB,UAAW,kBAAC,IAAD,OALb,WAUDlB,EAASmB,KAAI,SAACT,EAAGU,GAAJ,OACZ,kBAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAIO,IAAKD,EAAK9E,UAAWD,EAAQP,MAC9C,kBAACwF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACzE,EAAA,EAAD,CAAYR,UAAWD,EAAQF,MAAOS,MAAM,gBAAgB4E,cAAY,GACrEd,EAAEe,WAAWC,MAAQ,IAExB,kBAAC5E,EAAA,EAAD,CAAYC,QAAQ,KAAK4E,UAAU,MAChCjB,EAAEgB,KAAKE,eAEV,kBAAC9E,EAAA,EAAD,CAAYR,UAAWD,EAAQoD,IAAK7C,MAAM,iBACvC8D,EAAEmB,cADL,SAC2BnB,EAAEmB,cAAc,GAAI,EAD/C,WAGA,kBAAC/E,EAAA,EAAD,CAAYC,QAAQ,QAAQ4E,UAAU,IAAIG,MAAO,CAACC,UAAW,MAC1DrB,EAAEsB,aAEL,kBAAClF,EAAA,EAAD,CAAYR,UAAWD,EAAQsD,OAA/B,gBACiBsC,EAAOvB,EAAEwB,UAAUC,OAAO,iBAG7C,kBAACC,EAAA,EAAD,KACE,kBAACpB,EAAA,EAAD,CACEjE,QAAQ,YACRH,MAAM,UACNN,UAAWD,EAAQwD,OACnBqB,UAAW,kBAAC,IAAD,MACXD,KAAI,mBAAcP,EAAEhD,MALtB,QASA,kBAACsD,EAAA,EAAD,CACEjE,QAAQ,YACRH,MAAM,YACNyF,QAAS,kBAAK9B,EAAcG,EAAEhD,MAC9BpB,UAAWD,EAAQwD,OACnBqB,UAAW,kBAAC,IAAD,OALb,mB,qEC9GRvF,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCyG,OAAQ,CACN9F,SAAU,YAEZ+F,OAAO,aACLC,MAAO,OACPC,WAAY5G,EAAMK,QAAQ,GAC1BD,YAAaJ,EAAMK,QAAQ,IAC1BL,EAAM6G,YAAYC,GAAG,IAAyB,EAAnB9G,EAAMK,QAAQ,IAAU,CAClDsG,MAAO,MAGXI,MAAM,aACJhD,UAAW/D,EAAMK,QAAQ,GACzBwD,aAAc7D,EAAMK,QAAQ,GAC5B2G,QAAShH,EAAMK,QAAQ,IACtBL,EAAM6G,YAAYC,GAAG,IAAyB,EAAnB9G,EAAMK,QAAQ,IAAU,CAClD0D,UAAW/D,EAAMK,QAAQ,GACzBwD,aAAc7D,EAAMK,QAAQ,GAC5B2G,QAAShH,EAAMK,QAAQ,KAG3B4G,QAAS,CACPD,QAAShH,EAAMK,QAAQ,EAAG,EAAG,IAE/B6G,QAAS,CACPzD,QAAS,OACT0D,eAAgB,YAElBnD,OAAQ,CACND,UAAW/D,EAAMK,QAAQ,GACzBuG,WAAY5G,EAAMK,QAAQ,QAIxB+G,EAAgB,uCAAG,WAAOtF,GAAP,mBAAAV,EAAA,yDACnBiG,EAAY,GACF,SAAXvF,EAFoB,uBAGfJ,EAAK4F,GAAe,MAHL,SAIH7F,EAAWC,GAJR,OAIrB2F,EAJqB,8BAMFlG,IANE,cAMjBoG,EANiB,yBAOhB,CAACA,EAAQF,IAPO,4CAAH,sDAUhBG,GAAY,uCAAG,WAAOzF,EAAM0F,EAAOC,GAApB,mBAAAtG,EAAA,yDACfuD,EAAQ,CACVgD,WAAY,IAAIC,KAChBvB,SAAUD,IAASyB,IAAI,EAAE,KAAKC,SAC9BC,MAAO,GACPC,SAAU,GACVhC,cAAe,GACfH,KAAM,GACNM,YAAa,IAEH,SAATpE,EAVgB,8BAWV0F,EAAM7B,WAXI,SAYEjE,EAAc8F,GAZhB,cAYbjD,EAZa,OAajBkD,EAAS/C,GAbQ,kBAcVH,GAdU,wBAgBAlC,EAAcmF,GAhBd,eAgBfjD,EAhBe,OAiBnBkD,EAAS/C,GAjBU,kBAkBZH,GAlBY,4CAAH,0DAqBZ8C,GAAiB,SAACW,GAEtB,OADkB,IAAIC,gBAAgBC,OAAOC,SAASC,QACrCC,IAAIL,IAyGRM,GAtGA,SAAC9F,GACd,IAAMjC,EAAUV,IADM,EAEIoE,mBAAS,CACjCyD,WAAY,IAAIC,KAChBvB,SAAUD,IAASyB,IAAI,EAAE,KAAKC,SAC9BC,MAAO,GACPC,SAAU,GACVhC,cAAe,GACfH,KAAM,GACNM,YAAa,KATO,mBAEfsB,EAFe,KAERC,EAFQ,OAWMxD,mBAAS,IAXf,mBAWfqD,EAXe,KAWPiB,EAXO,KAahBC,EAAe,SAAAhG,GAAK,OAAI,SAAAiG,GACf,eAAVjG,GAAoC,aAAVA,IAC3BiG,EAAQ,CAACC,OAAQ,CAAEhE,MAAO+D,KAE5BhB,EAAS,eAAKD,EAAN,eAAchF,EAAQiG,EAAMC,OAAOhE,WAc7C,OAXAJ,qBAAU,WACR,sBAAC,oCAAAnD,EAAA,sEACiCgG,EAAiB3E,EAAMV,MADxD,mCACMyC,EADN,KACc6C,EADd,KAEKuB,EAAYpE,EAAOc,KAAI,SAAAC,GAAG,OAAG,kBAACsD,EAAA,EAAD,CAAUrD,IAAKD,EAAI1D,IAAK8C,MAAOY,EAAI1D,KAAO0D,EAAIM,SAC/E2C,EAAUI,GACQ,SAAfnG,EAAMV,MACP2F,EAAS,eAAIL,EAAL,CAAgBM,WAAY,IAAIC,KAAKP,EAAUM,YAAatB,SAAU,IAAIuB,KAAKP,EAAUhB,aALpG,0CAAD,KAQC,CAAC5D,EAAMV,OAGR,oCACE,kBAAC+G,EAAA,EAAD,MACA,0BAAMrI,UAAWD,EAAQkG,QACvB,kBAACqC,EAAA,EAAD,CAAOtI,UAAWD,EAAQuG,OACxB,kBAAC9F,EAAA,EAAD,CAAY6E,UAAU,KAAK5E,QAAQ,KAAK8H,MAAM,QAA9C,kBAGA,kBAAClE,EAAA,EAAD,CAAMmB,MAAO,CAAClC,UAAW,IAAKgB,WAAS,EAAC1E,QAAS,GAC/C,kBAACyE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIgE,GAAI,GAErB,kBAACC,EAAA,EAAD,CACEC,MAAM,eACNxE,MAAO8C,EAAMO,SACboB,SAAWX,EAAa,YACxBY,WAAS,GAGT9B,IAIJ,kBAACzC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIgE,GAAI,GACrB,kBAACK,EAAA,EAAD,CAAWC,UAAQ,EAAC5E,MAAO8C,EAAM5B,KAAMwD,WAAS,EAACG,YAAY,eAAeJ,SAAWX,EAAa,WAEtG,kBAAC3D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIgE,GAAI,GACrB,kBAACK,EAAA,EAAD,CAAWC,UAAQ,EAACC,YAAY,gBAAgB7E,MAAO8C,EAAMM,MAAOsB,WAAS,EAACD,SAAWX,EAAa,YAExG,kBAAC3D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIgE,GAAI,GACrB,kBAACK,EAAA,EAAD,CAAWC,UAAQ,EAACC,YAAY,wBAAwB7E,MAAO8C,EAAMzB,cAAeqD,WAAS,EAACD,SAAWX,EAAa,oBAExH,kBAAC3D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIgE,GAAI,GACrB,kBAAC,IAAD,CACE1F,OAAO,SACP7B,GAAG,qBACHyH,MAAM,qBACN7C,OAAO,aACP3B,MAAO8C,EAAME,WACbyB,SAAWX,EAAa,cACxBgB,oBAAqB,CACnB,aAAc,kBAIpB,kBAAC3E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIgE,GAAI,GACrB,kBAAC,IAAD,CACE1F,OAAO,SACP4F,MAAM,sBACN7C,OAAO,aACP3B,MAAO8C,EAAMpB,SACb+C,SAAWX,EAAa,YACxBgB,oBAAqB,CACnB,aAAc,kBAIpB,kBAAC3E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACqE,EAAA,EAAD,CAAWC,UAAQ,EAAEG,WAAS,EAACC,KAAK,IAAIN,WAAS,EAACG,YAAY,cAAc7E,MAAO8C,EAAMtB,YAAaiD,SAAWX,EAAa,kBAEhI,kBAAC3D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACE,EAAA,EAAD,CAAQjE,QAAQ,YAAYH,MAAM,UAAUyF,QAASgB,GAAaoC,KAAK,KAAMnH,EAAMV,KAAM0F,EAAOC,IAC7E,SAAfjF,EAAMV,KAAiB,SAAW,c,sCC7K9C8H,GAAc,SAACnB,GACnBoB,QAAQC,KAAK,8BAETC,GAAWjK,aAAW,SAAAC,GAAK,MAAI,CACnCC,KAAM,CACJsD,OAAQvD,EAAMK,QAAQ,QA8BX4J,GAdI,WACjB,IAAMzJ,EAAUwJ,KACZE,EAdU,WACd,IAAIC,EAAOhC,OAAOC,SAASgC,SAASC,MAAM,UAC1C,OAAGF,GAAQA,EAAKG,OACP,QAETH,EAAOhC,OAAOC,SAASgC,SAASC,MAAM,cAC3BF,EAAKG,OACP,SAEF,OAKIC,GAEX,OACE,kBAACC,GAAA,EAAD,CAAaxJ,aAAW,aAAaP,UAAWD,EAAQP,MACtD,kBAACwK,GAAA,EAAD,CAAM1J,MAAM,UAAUqE,KAAK,IAAIoB,QAASqD,IAAxC,WAGA,kBAAC5I,EAAA,EAAD,CAAYF,MAAM,eAAemJ,K,kBCCxBQ,GAvBH,SAACjI,GAEX,OACE,kBAAC,KAAD,CAAyBkI,MAAOC,MAC9B,kBAAC,EAAD,MACA,kBAACC,GAAD,MACA,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOC,OAAK,EAACX,KAAK,SAChB,kBAAC,GAAD,CAASpI,KAAK,UAEhB,kBAAC,KAAD,CAAO+I,OAAK,EAACX,KAAK,WAChB,kBAAC,GAAD,CAAQpI,KAAK,YAEf,kBAAC,KAAD,CAAO+I,OAAK,EAACX,KAAK,KAChB,kBAAC,EAAD,WCjBQY,QACW,cAA7B5C,OAAOC,SAAS4C,UAEe,UAA7B7C,OAAOC,SAAS4C,UAEhB7C,OAAOC,SAAS4C,SAASX,MACvB,2DCXNY,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9B,QAAQ8B,MAAMA,EAAMvI,c","file":"static/js/main.36872f79.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Hotel Packages\n          </Typography>\n          \n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","export const GetHotels = async ()=> {\n  const response = await fetch('/api/hotels')\n  return await response.json()\n}\n\nexport const GetPackages = async ()=> {\n  const response = await fetch('/api/packages')\n  return await response.json()\n}\n\nexport const GetPackage = async (id)=> {\n  const response = await fetch('/api/packages/'+id)\n  return await response.json()\n}\n\nexport const UpdatePackage = async (data)=> {\n  const id = data._id;\n  delete data._id\n  const response = await fetch('/api/packages/'+id, {\n    method: 'PUT',\n    mode: 'cors',\n    cache: 'no-cache',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify(data)\n  })\n\n  return await response.json()\n}\n\nexport const CreatePackage = async (data)=> {\n  \n  const response = await fetch('/api/packages', {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify(data)\n  })\n\n  return await response.json()\n}\n\nexport const DeletePackage = async (id)=> {\n  const response = await fetch('/api/packages/'+id, { method: 'DELETE' })\n  return await response.json()\n}\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n\nexport default function CustomizedSnackbars(props) {\n  return (\n    <Snackbar anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }} open={props.open} autoHideDuration={6000} onClose={props.handleClose}>\n      <Alert onClose={props.handleClose} severity={props.severity || \"success\"}>\n        { props.message }\n      </Alert>\n    </Snackbar>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { GetPackages, DeletePackage } from '../Services';\nimport { Grid } from '@material-ui/core';\nimport * as moment from 'moment';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CustomizedSnackbars from '../partials/Snakbar';\n\nconst useStyles = makeStyles(theme =>({\n  container_root: {\n    flexGrow: 1\n  },\n  root: {\n    margin: theme.spacing(1)\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  valid: {\n    marginTop: 12,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst List = ()=>{\n  const classes = useStyles();\n  \n\n  let [packages, setPackages] = useState([])\n  let [snackbar, setSnackbar] = useState({\n    open: false,\n    severity: \"success\",\n    message: \"\"\n  })\n  useEffect(()=>{\n    (async ()=>{\n      let result  = await GetPackages();\n      setPackages(result.reverse())\n    })()\n  }, [])\n\n  const deletePackage = async (value)=> {\n    \n    try{\n      await DeletePackage(value)\n      setSnackbar({\n        open: true,\n        severity: \"success\",\n        message: \"Success!!\"\n      })\n      setPackages(packages.filter(v=> v._id !== value))\n    }catch(err){\n      setSnackbar({\n        open: true,\n        severity: \"error\",\n        message: \"Try Again!!\"\n      })\n    }\n    \n  }\n  const onSnackbarClose = ()=>{\n    setSnackbar({open: false})\n  }\n  \n  return (\n    <>\n    <CustomizedSnackbars open={snackbar.open} severity={snackbar.severity} message={snackbar.message} handleClose={onSnackbarClose}/>\n    <Grid container className={classes.container_root} spacing={3}>\n      <Grid item xs={11} container justify=\"flex-end\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          href={`/create`}\n          className={classes.button}\n          startIcon={<AddIcon />}\n        >\n          Create\n        </Button>\n      </Grid>\n      {packages.map((v, idx)=>(\n        <Grid item xs={4}  key={idx} className={classes.root}>\n          <Card>\n            <CardContent>\n              <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                {v.hotel_info.name || \"\"}\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                {v.name.toUpperCase()}\n              </Typography>\n              <Typography className={classes.pos} color=\"textSecondary\">\n                {v.duration_days} Days {(v.duration_days-1)||0} Nights\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\" style={{minHeight: 120}}>\n                {v.description}\n              </Typography>\n              <Typography className={classes.valid}>\n                Valid Till:  { moment(v.valid_to).format(\"Do MMM YYYY\") } \n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                startIcon={<EditIcon />}\n                href={`/edit?id=${v._id}`}\n              >\n                Edit\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={()=> deletePackage(v._id)}\n                className={classes.button}\n                startIcon={<DeleteIcon />}\n              >\n                Delete\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n    </>\n  );\n}\n\n\nexport default List;","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport * as moment from 'moment';\nimport { GetHotels, GetPackage, UpdatePackage, CreatePackage } from '../Services';\nimport {\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst fetchPreloadData = async (method)=>{\n  let __package = {}\n  if(method === 'edit'){\n    const id = getQueryParams('id')\n    __package = await GetPackage(id)\n  }\n  const hotels = await GetHotels()\n  return [hotels, __package];\n}\n\nconst submitAction = async (mode, state, setState)=> {\n  let value = {\n    valid_from: new Date(),\n    valid_to: moment().add(1,'d').toDate(),\n    price: \"\",\n    hotel_id: \"\",\n    duration_days: \"\",\n    name: \"\",\n    description: \"\"  \n  }\n  if(mode === 'edit'){\n    delete state.hotel_info\n    let result = await UpdatePackage(state)\n    setState(value)\n    return result;\n  }\n  let result = await CreatePackage(state);\n  setState(value)\n  return result ;\n}\n\nconst getQueryParams = (param)=> {\n  const urlParams = new URLSearchParams(window.location.search);\n  return urlParams.get(param);\n}\n\nconst Create = (props)=>{\n  const classes = useStyles();\n  const [state, setState] = useState({\n    valid_from: new Date(),\n    valid_to: moment().add(1,'d').toDate(),\n    price: \"\",\n    hotel_id: \"\",\n    duration_days: \"\",\n    name: \"\",\n    description: \"\"  \n  })\n  const [hotels, setHotels] = useState([]);\n\n  const handleChange = props => event => {\n    if(props === 'valid_from' || props === 'valid_to') {\n      event = {target: { value: event }}\n    }\n    setState({ ...state, [props]: event.target.value})\n  }\n\n  useEffect(()=> {\n    (async ()=>{\n      let [result, __package] = await fetchPreloadData(props.mode)\n      let hotelList = result.map(idx=>(<MenuItem key={idx._id} value={idx._id}>{ idx.name }</MenuItem>))\n      setHotels(hotelList)\n      if(props.mode === 'edit'){\n        setState({...__package, valid_from: new Date(__package.valid_from), valid_to: new Date(__package.valid_to)})\n      }\n    })()\n  }, [props.mode])\n  \n  return (\n    <>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"left\">\n            Create Package\n          </Typography>\n          <Grid style={{marginTop: 30}} container spacing={3}>\n            <Grid item xs={12} md={6}>\n              {/* <TextField required id=\"cardName\" label=\"Name od Hote\" fullWidth /> */}\n              <Select\n                label=\"Name od Hote\"\n                value={state.hotel_id}\n                onChange={ handleChange('hotel_id') }\n                fullWidth\n              >\n              {\n                hotels\n              }\n              </Select>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField required value={state.name} fullWidth placeholder=\"Package Name\" onChange={ handleChange('name') } />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField required placeholder=\"Package Price\" value={state.price} fullWidth onChange={ handleChange('price') } />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField required placeholder=\"Package Duration Days\" value={state.duration_days} fullWidth onChange={ handleChange('duration_days') }/>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <KeyboardDatePicker\n                margin=\"normal\"\n                id=\"date-picker-dialog\"\n                label=\"Package Valid From\"\n                format=\"MM/dd/yyyy\"\n                value={state.valid_from}\n                onChange={ handleChange('valid_from') }\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <KeyboardDatePicker\n                margin=\"normal\"\n                label=\"Package Valid until\"\n                format=\"MM/dd/yyyy\"\n                value={state.valid_to}\n                onChange={ handleChange('valid_to') }\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField required  multiline rows=\"4\" fullWidth placeholder=\"Description\" value={state.description} onChange={ handleChange('description') }/>\n            </Grid>\n            <Grid item xs={12}>\n              <Button variant=\"contained\" color=\"primary\" onClick={submitAction.bind(null, props.mode, state, setState)}>\n                { props.mode === 'edit'? \"Update\" : \"Save\" }\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </main>\n    </>\n  );\n}\n\nexport default Create;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core';\n\nconst handleClick = (event)=> {\n  console.info('You clicked a breadcrumb.');\n}\nconst useStyle = makeStyles(theme=> ({\n  root: {\n    margin: theme.spacing(2)\n  }\n}))\n\nconst getName = ()=> {\n  let path = window.location.pathname.match(/edit/ig) \n  if(path && path.length){\n    return \"Edit\"\n  }\n  path = window.location.pathname.match(/create/ig) \n  if(path && path.length){\n    return \"Create\"\n  }\n  return \"List\"\n}\n\nconst Breadcrumb = (...props)=>{\n  const classes = useStyle()\n  let crum = getName()\n\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\" className={classes.root}>\n      <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\n        Package\n      </Link>\n      <Typography color=\"textPrimary\">{crum}</Typography>\n    </Breadcrumbs>\n  );\n}\n\nexport default Breadcrumb;","import React from 'react';\nimport './App.css';\nimport Navbar from './app/partials/Navbar';\nimport List from './app/packages/List';\nimport Create from './app/packages/Create';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Breadcrumb from './app/partials/Breadcrum';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\";\n\nconst App = (props)=> {\n  \n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Navbar/>\n      <Breadcrumb/>\n      <Router>\n        <Switch>\n          <Route excat path=\"/edit\">\n            <Create  mode=\"edit\" />\n          </Route>\n          <Route excat path=\"/create\">\n            <Create mode=\"create\" />\n          </Route>\n          <Route excat path=\"/\">\n            <List />\n          </Route>\n        </Switch>\n      </Router>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}